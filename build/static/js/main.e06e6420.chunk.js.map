{"version":3,"sources":["context.jsx","SetupForm.jsx","Loading.jsx","Modal.jsx","App.js","index.js"],"names":["table","animals","computers","art","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModalOpen","setIsModalOpen","amount","category","difficulty","setup","setSetup","fetchQuestions","url","a","axios","response","data","results","length","nextQ","oldIndex","openModal","Provider","value","checkAnswer","answer","correctAnswer","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","onClick","Loading","Modal","App","question","incorrect_answers","correct_answer","answers","randomIdx","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e06e6420.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useState, useContext, useEffect } from 'react'\n\nconst table = {\n  animals:27,\n  computers: 18,\n  art: 25,\n}\n\n\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n\n  const [waiting, setWaiting]=useState(true)\n  const [loading,setLoading] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  const [correct,setCorrect] = useState(0)\n  const [error,setError] = useState(false)\n  const [isModalOpen,setIsModalOpen] = useState(false)\n  const [setup, setSetup] = useState({\n    amount:10,\n    category:'animals',\n    difficulty:'easy'\n  })\n\n  const fetchQuestions = async (url) => {\n    setLoading(true)\n    setWaiting(false)\n\n\n    try {\n      const response =await axios(url)\n      const data = response.data.results\n      if(data.length >0){\n        setQuestions(data)\n        setLoading(false)\n        setWaiting (false)\n        setError(false)\n      }else {\n        setWaiting(true)\n        setError(true)\n      }\n    }catch(err){\n      setWaiting = true\n    }\n   \n  }\n\n  const nextQ = ()=> {\n   \n    setIndex((oldIndex)=> {\n      const index = oldIndex +1\n      if (index>questions.length -1) {\n        openModal()\n        return 0\n      }\n      return index\n    })\n  }\n\n\n  const checkAnswer = (answer, correctAnswer)=> {\n    if (answer===correctAnswer) {\n      setCorrect(correct+1)\n    }\n    nextQ()\n  }\n\n  const openModal = () => {\n    setIsModalOpen(true)\n  }\n\n  const closeModal =()=> {\n    setWaiting(true)\n    setCorrect(0)\n    setIsModalOpen(false)\n  }\n\n  const handleChange = (e)=> {\n    const name = e.target.name\n    const value = e.target.value\n    setSetup({...setup,[name]:value})\n    \n    \n  }\n\n  const handleSubmit=(e)=> {\n    e.preventDefault()\n    const {amount, category, difficulty} = setup\n    const url = `https://opentdb.com/api.php?amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=multiple`\n    fetchQuestions(url)\n  }\n\n\n  return <AppContext.Provider value={{waiting,loading,questions,index,correct,error,isModalOpen, nextQ, checkAnswer,closeModal,setup,handleChange,handleSubmit}}>{children}</AppContext.Provider>\n}\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst SetupForm = () => {\n  const{setup, handleChange, handleSubmit,error} = useGlobalContext()\n  return (\n  <main>\n    <section className=\"quiz quiz-small\">\n      <form className=\"setup-form\">\n        <h2>Setup Quiz</h2>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">number or questions</label>\n          <input type=\"number\" \n            name = 'amount'\n            id = 'amount' \n            value = {setup.amount} \n            onChange = {handleChange} \n            className='form-input'\n            min={1}\n            max={50} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"category\">category</label>\n          <select name=\"category\" id=\"category\"className='form-input'value = {setup.category} onChange = {handleChange}>\n            <option value=\"animals\">animals</option>\n            <option value=\"art\">art</option>\n            <option value=\"computers\">computers</option>\n\n          </select>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"difficulty\"> set difficulty</label>\n          <select name=\"difficulty\" id=\"difficulty\"className='form-input'value = {setup.difficulty} onChange = {handleChange}>\n            <option value=\"easy\">easy</option>\n            <option value=\"medium\">medium</option>\n            <option value=\"hard\">hard</option>\n\n          </select>\n        </div>\n        {error && <p className = 'error'>There seems to be a problem, please try different settings</p>}\n        <button type='submit' onClick = {handleSubmit} className='btn'> start</button>\n      </form>\n    </section>\n  </main>\n  )\n}\n\nexport default SetupForm\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Modal = () => {\n  const {isModalOpen, closeModal, correct,questions} = useGlobalContext()\n  return (\n    <div className = {`${isModalOpen ? 'modal-container isOpen':'modal-container'}`}>\n      <div className=\"modal-content\">\n        <h2>Congrats</h2>\n        <p>you got {correct} out of {questions.length} questions correctly</p>\n        <button className=\"btn\" onClick={closeModal}>play again</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nimport SetupForm from './SetupForm'\nimport Loading from './Loading'\nimport Modal from './Modal'\nfunction App() {\n\n  const {waiting,loading,questions,index,correct,nextQ,checkAnswer} = useGlobalContext()\n\n  if(waiting){\n    return<SetupForm/>\n  }\n  else if (loading) {\n    return <Loading/>\n    \n  }\n\n  \n  const {question, incorrect_answers, correct_answer} = questions[index]\n\n  let answers = [...incorrect_answers]\n  const randomIdx =Math.floor( Math.random() * 4)\n  if(randomIdx === 3) {\n    answers.push(correct_answer)\n  } else {\n    answers.push(answers[randomIdx])\n    answers[randomIdx] = correct_answer\n  }\n  \n\n \n  return <main>\n    <Modal/>\n    <section className = 'quiz'>\n      <p className = 'correct-answers'>\n        correct answers: {correct}/{index}\n      </p>\n\n      <div className = 'container'>\n        < h2 dangerouslySetInnerHTML = {{__html:question}}/>\n        <div className = 'btn-container'>\n          {answers.map((answer,index)=>{\n            return (\n            <button key = {index} className = 'answer-btn' dangerouslySetInnerHTML = {{__html:answer}} onClick={()=>checkAnswer(answer,correct_answer)}/>\n            )\n          })}\n        </div>\n      </div>\n\n      <button className = 'btn' onClick ={ nextQ}>next question</button>\n    </section>\n  </main>\n  \n\n  \n  \n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}