{"version":3,"sources":["context.jsx","setup-form/SetupForm.jsx","Loading.jsx","Message/Message.jsx","quiz/quiz.jsx","App.js","index.js"],"names":["table","animals","computers","art","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isMessageOpen","setIsMessageOpen","amount","category","difficulty","setup","setSetup","fetchQuestions","url","a","axios","response","data","results","length","nextQ","oldIndex","openMessage","Provider","value","checkAnswer","answer","correctAnswer","closeMessage","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","onClick","Loading","Message","Quiz","question","incorrect_answers","correct_answer","answers","randomIdx","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAGMA,EAAQ,CACZC,QAAQ,GACRC,UAAW,GACXC,IAAK,IAKDC,EAAaC,IAAMC,gBAEnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAERC,oBAAS,GAFD,mBAE7BC,EAF6B,KAEpBC,EAFoB,OAGPF,oBAAS,GAHF,mBAG7BG,EAH6B,KAGrBC,EAHqB,OAIFJ,mBAAS,IAJP,mBAI7BK,EAJ6B,KAIlBC,EAJkB,OAKVN,mBAAS,GALC,mBAK7BO,EAL6B,KAKtBC,EALsB,OAMPR,mBAAS,GANF,mBAM7BS,EAN6B,KAMrBC,EANqB,OAOXV,oBAAS,GAPE,mBAO7BW,EAP6B,KAOvBC,EAPuB,OAQKZ,oBAAS,GARd,mBAQ7Ba,EAR6B,KAQfC,EARe,OASVd,mBAAS,CACjCe,OAAO,GACPC,SAAS,UACTC,WAAW,SAZuB,mBAS7BC,EAT6B,KAStBC,EATsB,KAe9BC,EAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACrBlB,GAAW,GACXF,GAAW,GAFU,kBAMGqB,IAAMF,GANT,OAMbG,EANa,QAObC,EAAOD,EAASC,KAAKC,SACnBC,OAAQ,GACdrB,EAAamB,GACbrB,GAAW,GACXF,GAAY,GACZU,GAAS,KAETV,GAAW,GACXU,GAAS,IAfQ,kDAkBT,0BAAVV,GAAa,EAlBM,0DAAH,sDAuBd0B,EAAQ,WAEZpB,GAAS,SAACqB,GACR,IAAMtB,EAAQsB,EAAU,EACxB,OAAItB,EAAMF,EAAUsB,OAAQ,GAC1BG,IACO,GAEFvB,MAYLuB,EAAc,WAClBhB,GAAiB,IAyBnB,OAAO,kBAACnB,EAAWoC,SAAZ,CAAqBC,MAAO,CAAC/B,UAAQE,UAAQE,YAAUE,QAAME,UAAQE,QAAME,gBAAee,QAAOK,YAjCpF,SAACC,EAAQC,GACvBD,IAASC,GACXzB,EAAWD,EAAQ,GAErBmB,KA6BkHQ,aAtBhG,WAClBlC,GAAW,GACXQ,EAAW,GACXI,GAAiB,IAmB8GI,QAAMmB,aAhBlH,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBP,EAAQM,EAAEE,OAAOR,MACvBb,EAAS,2BAAID,GAAL,kBAAYqB,EAAMP,MAawHS,aARjI,SAACH,GAClBA,EAAEI,iBADqB,IAEhB3B,EAAgCG,EAAhCH,OAAQC,EAAwBE,EAAxBF,SAAUC,EAAcC,EAAdD,WACnBI,EAAG,6CAAyCN,EAAzC,qBAA4DxB,EAAMyB,GAAlE,uBAA0FC,EAA1F,kBACTG,EAAeC,MAImJtB,IAGzJ4C,EAAmB,WAC9B,OAAOC,qBAAWjD,ICrDLkD,G,MA5CG,WAAO,IAAD,EAC2BF,IAA3CzB,EADgB,EAChBA,MAAOmB,EADS,EACTA,aAAcI,EADL,EACKA,aAAa9B,EADlB,EACkBA,MACxC,OACA,8BACE,6BAASmC,UAAU,QACjB,0BAAMA,UAAU,cACd,0CACA,yBAAKA,UAAU,gBACb,2BAAOC,QAAQ,UAAf,uBACA,2BAAOC,KAAK,SACVT,KAAO,SACPU,GAAK,SACLjB,MAASd,EAAMH,OACfmC,SAAYb,EACZS,UAAU,aACVK,IAAK,EACLC,IAAK,MAET,yBAAKN,UAAU,gBACb,2BAAOC,QAAQ,YAAf,YACA,4BAAQR,KAAK,WAAWU,GAAG,WAAUH,UAAU,aAAYd,MAASd,EAAMF,SAAUkC,SAAYb,GAC9F,4BAAQL,MAAM,WAAd,WACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,aAAd,eAIJ,yBAAKc,UAAU,gBACb,2BAAOC,QAAQ,cAAf,mBACA,4BAAQR,KAAK,aAAaU,GAAG,aAAYH,UAAU,aAAYd,MAASd,EAAMD,WAAYiC,SAAYb,GACpG,4BAAQL,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,UAIHrB,GAAS,uBAAGmC,UAAY,SAAf,8DACV,4BAAQE,KAAK,SAASK,QAAWZ,EAAcK,UAAU,OAAzD,eC/BOQ,EARC,WACd,OACE,8BACE,yBAAKR,UAAU,cCYNS,G,MAbC,WAAO,IAAD,EACqCZ,IAAlD9B,EADa,EACbA,cAAeuB,EADF,EACEA,aAAc3B,EADhB,EACgBA,QAAQJ,EADxB,EACwBA,UAC5C,OACE,yBAAKyC,UAAS,UAAOjC,EAAgB,2BAA2B,sBAC9D,yBAAKiC,UAAU,mBACb,wCACA,sCAAYrC,EAAZ,WAA6BJ,EAAUsB,OAAvC,wBACA,4BAAQmB,UAAU,MAAMO,QAASjB,GAAjC,kB,QCiCOoB,G,MAxCF,WAAO,IAAD,EACqCb,IAA7CtC,EADQ,EACRA,UAAUE,EADF,EACEA,MAAME,EADR,EACQA,QAAQmB,EADhB,EACgBA,MAAMK,EADtB,EACsBA,YADtB,EAIuC5B,EAAUE,GAAzDkD,EAJQ,EAIRA,SAAUC,EAJF,EAIEA,kBAAmBC,EAJrB,EAIqBA,eAEhCC,EAAO,YAAOF,GACZG,EAAWC,KAAKC,MAAuB,EAAhBD,KAAKE,UAQlC,OAPiB,IAAdH,EACHD,EAAQK,KAAKN,IAEbC,EAAQK,KAAKL,EAAQC,IACrBD,EAAQC,GAAaF,GAIjB,6BAASb,UAAY,QACjB,uBAAGA,UAAY,mBAAf,oBACsBrC,EADtB,IACgCF,GAGhC,yBAAKuC,UAAY,aACb,wBAAKoB,wBAA2B,CAACC,OAAOV,KACxC,yBAAKX,UAAY,iBAChBc,EAAQQ,KAAI,SAAClC,EAAO3B,GACjB,OACA,4BAAQ8D,IAAO9D,EAAOuC,UAAY,aAAaoB,wBAA2B,CAACC,OAAOjC,GAASmB,QAAS,kBAAIpB,EAAYC,EAAOyB,WAMnI,4BAAQb,UAAY,MAAMO,QAAWzB,GAArC,oBCPG0C,MAtBf,WAAgB,IAAD,EAEa3B,IAAnB1C,EAFM,EAENA,QAAQE,EAFF,EAEEA,QAEf,OAAGF,EACK,kBAAC,EAAD,MAECE,EACA,kBAAC,EAAD,MAGF,8BACL,kBAAC,EAAD,MACA,kBAAC,EAAD,QCdJoE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.9394a035.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useState, useContext, useEffect } from 'react'\n\nconst table = {\n  animals:27,\n  computers: 18,\n  art: 25,\n}\n\n\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n\n  const [waiting, setWaiting]=useState(true)\n  const [loading,setLoading] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  const [correct,setCorrect] = useState(0)\n  const [error,setError] = useState(false)\n  const [isMessageOpen,setIsMessageOpen] = useState(false)\n  const [setup, setSetup] = useState({\n    amount:10,\n    category:'animals',\n    difficulty:'easy'\n  })\n\n  const fetchQuestions = async (url) => {\n    setLoading(true)\n    setWaiting(false)\n\n\n    try {\n      const response =await axios(url)\n      const data = response.data.results\n      if(data.length >0){\n        setQuestions(data)\n        setLoading(false)\n        setWaiting (false)\n        setError(false)\n      }else {\n        setWaiting(true)\n        setError(true)\n      }\n    }catch(err){\n      setWaiting = true\n    }\n   \n  }\n\n  const nextQ = ()=> {\n   \n    setIndex((oldIndex)=> {\n      const index = oldIndex +1\n      if (index>questions.length -1) {\n        openMessage()\n        return 0\n      }\n      return index\n    })\n  }\n\n\n  const checkAnswer = (answer, correctAnswer)=> {\n    if (answer===correctAnswer) {\n      setCorrect(correct+1)\n    }\n    nextQ()\n  }\n\n  const openMessage = () => {\n    setIsMessageOpen(true)\n  }\n\n  const closeMessage =()=> {\n    setWaiting(true)\n    setCorrect(0)\n    setIsMessageOpen(false)\n  }\n\n  const handleChange = (e)=> {\n    const name = e.target.name\n    const value = e.target.value\n    setSetup({...setup,[name]:value})\n    \n    \n  }\n\n  const handleSubmit=(e)=> {\n    e.preventDefault()\n    const {amount, category, difficulty} = setup\n    const url = `https://opentdb.com/api.php?amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=multiple`\n    fetchQuestions(url)\n  }\n\n\n  return <AppContext.Provider value={{waiting,loading,questions,index,correct,error,isMessageOpen, nextQ, checkAnswer,closeMessage,setup,handleChange,handleSubmit}}>{children}</AppContext.Provider>\n}\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from '../context'\nimport './setupForm.styles.css'\n\nconst SetupForm = () => {\n  const{setup, handleChange, handleSubmit,error} = useGlobalContext()\n  return (\n  <main>\n    <section className=\"quiz\">\n      <form className=\"setup-form\">\n        <h2>Setup Quiz</h2>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">number of questions</label>\n          <input type=\"number\" \n            name = 'amount'\n            id = 'amount' \n            value = {setup.amount} \n            onChange = {handleChange} \n            className='form-input'\n            min={1}\n            max={50} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"category\">category</label>\n          <select name=\"category\" id=\"category\"className='form-input'value = {setup.category} onChange = {handleChange}>\n            <option value=\"animals\">animals</option>\n            <option value=\"art\">art</option>\n            <option value=\"computers\">computers</option>\n\n          </select>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"difficulty\"> set difficulty</label>\n          <select name=\"difficulty\" id=\"difficulty\"className='form-input'value = {setup.difficulty} onChange = {handleChange}>\n            <option value=\"easy\">easy</option>\n            <option value=\"medium\">medium</option>\n            <option value=\"hard\">hard</option>\n\n          </select>\n        </div>\n        {error && <p className = 'error'>There seems to be a problem, please try different settings</p>}\n        <button type='submit' onClick = {handleSubmit} className='btn'> start</button>\n      </form>\n    </section>\n  </main>\n  )\n}\n\nexport default SetupForm\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport './message.css'\nimport { useGlobalContext } from '../context'\n\nconst Message = () => {\n  const {isMessageOpen, closeMessage, correct,questions} = useGlobalContext()\n  return (\n    <div className = {`${isMessageOpen ? 'message-container isOpen':'message-container'}`}>\n      <div className=\"message-content\">\n        <h2>Congrats</h2>\n        <p>you got {correct} out of {questions.length} questions correctly</p>\n        <button className=\"btn\" onClick={closeMessage}>play again</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Message;\n","import React from 'react';\r\nimport { useGlobalContext } from '../context';\r\nimport './quiz.styles.css'\r\n\r\nconst Quiz = () => {\r\n    const {questions,index,correct,nextQ,checkAnswer} = useGlobalContext()\r\n\r\n\r\n    const {question, incorrect_answers, correct_answer} = questions[index]\r\n\r\n    let answers = [...incorrect_answers]\r\n    const randomIdx =Math.floor( Math.random() * 4)\r\n    if(randomIdx === 3) {\r\n    answers.push(correct_answer)\r\n    } else {\r\n    answers.push(answers[randomIdx])\r\n    answers[randomIdx] = correct_answer\r\n    }\r\n\r\n    return (\r\n        <section className = 'quiz'>\r\n            <p className = 'correct-answers'>\r\n                correct answers: {correct}/{index}\r\n            </p>\r\n\r\n            <div className = 'container'>\r\n                < h2 dangerouslySetInnerHTML = {{__html:question}}/>\r\n                <div className = 'btn-container'>\r\n                {answers.map((answer,index)=>{\r\n                    return (\r\n                    <button key = {index} className = 'answer-btn' dangerouslySetInnerHTML = {{__html:answer}} onClick={()=>checkAnswer(answer,correct_answer)}/>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n\r\n            <button className = 'btn' onClick ={ nextQ}>next question</button>\r\n        </section>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Quiz;\r\n\r\n\r\n\r\n\r\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nimport SetupForm from './setup-form/SetupForm'\nimport Loading from './Loading'\nimport Message from './Message/Message'\nimport Quiz from './quiz/quiz'\nfunction App() {\n\n  const {waiting,loading} = useGlobalContext()\n\n  if(waiting){\n    return<SetupForm/>\n  }\n  else if (loading) {\n    return <Loading/>\n    \n  }\n  return <main>\n    <Message/>\n    <Quiz/>\n    \n  </main>\n  \n\n  \n  \n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}